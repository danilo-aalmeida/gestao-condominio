# Generated by Django 2.2.6 on 2019-11-26 00:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('apartamento', '0002_auto_20191103_2315'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cpf', models.CharField(help_text='Requer. 14 characteres considerando as pontoaçoes. Exemplo xxx.xxx.xxx-xx', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Enter a valid cpf.', 'invalid')], verbose_name='CPF')),
                ('first_name', models.CharField(max_length=30, verbose_name='nome')),
                ('last_name', models.CharField(max_length=30, verbose_name='sobrenome')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('telephone', models.CharField(max_length=20)),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se é um user leitor ou não.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si o user é ativo ou não, Deselecionar em vez de deletar as contas', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='data inscrição')),
                ('date_inicio', models.DateTimeField(verbose_name='data inicio moradia.')),
                ('date_final', models.DateTimeField(verbose_name='data fim moradia.')),
                ('apartamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apartamento.Apartamento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
